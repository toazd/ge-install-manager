#!/usr/bin/env bash

tmp_file=/tmp/geimTests.proton-ge-custom.releases
log_file=geimLog_$(date '+%F_%T').log

rm -vf "$tmp_file" "$log_file"

touch "$tmp_file" "$log_file" || exit 1

CleanUp () {
    rm -vf "$tmp_file"
    unset GEIM_TESTS
}

trap 'CleanUp' EXIT

# Disable color escape codes in script stderr verbose output
export GEIM_TESTS=1

# Log the output of ReportEnvironmentInfo()
ge-install-manager -fzZ > "$log_file"

# Log the output of ShowHelp and ShowUsage
##ge-install-manager -hH >> "$log_file"

# Get a list of the available releases
# Parse ge-install-manager -l output into a tmp file
while IFS= read -r; do
    REPLY=${REPLY%%[[:blank:]]*}
    REPLY=${REPLY//Proton-}
    printf '%s\n' "$REPLY"
done < <(ge-install-manager -zL) >>"$tmp_file"

printf '\n%s\n%s\n' "Releases available:" "$(cat "$tmp_file")" >> "$log_file"

printf '%s\n%s\n' "Installed releases:" "$(ge-install-manager -zl 2>&1)" >> "$log_file"

Test1_UninstallDownloadInstallVerifyRemove () {

    # Nuke all previously installed files
    ##ge-install-manager -fXD
    # Nuke all but packages
    ##ge-install-manager -fD

    # Download each available release version
    while IFS= read -r; do
        ge-install-manager -zd "$REPLY" 2>>"$log_file"
    done <"$tmp_file"

    # Install each available release version
    while IFS= read -r; do
        ge-install-manager -zi "$REPLY" 2>>"$log_file"
    done <"$tmp_file"

    # Report disk usage
    ge-install-manager -zSl "$REPLY" 1>>"$log_file" 2>&1

    # Verify all installations at once
    ge-install-manager -zV 2>>"$log_file"

    # Verify all installations one at a time
    while IFS= read -r; do
        ge-install-manager -zv "$REPLY" 2>>"$log_file"
    done <"$tmp_file"

    # Remove only installs
    while IFS= read -r; do
        ge-install-manager -zR "$REPLY" 1>>"$log_file" 2>&1
    done <"$tmp_file"

    # Install each
    while IFS= read -r; do
        ge-install-manager -zi "$REPLY" 2>>"$log_file"
    done <"$tmp_file"

    # Report disk usage
    ge-install-manager -zSl "$REPLY" 1>>"$log_file" 2>&1
}

Test2_Verify () {

    # Verify all installations at once
    ge-install-manager -zV 2>>"$log_file"

    # Verify all installations one at a time
    while IFS= read -r; do
        ge-install-manager -zv "$REPLY" 2>>"$log_file"
    done <"$tmp_file"
}

Test3_ReleaseNotes () {

    # Show release notes one at a time
    while IFS= read -r; do
        ge-install-manager -zn "$REPLY" 1>>"$log_file" 2>&1
    done <"$tmp_file"

    # Show release notes all at once
    ge-install-manager -zN 1>>"$log_file" 2>&1
}

Test4_FileCountDiskUsage () {

    # Report file count and disk usage one at a time
    while IFS= read -r; do
        ge-install-manager -zs "$REPLY" 1>>"$log_file" 2>&1
    done <"$tmp_file"

    # Report file count and disk usage all at once
    ge-install-manager -zS 1>>"$log_file" 2>&1
}

##Test1_UninstallDownloadInstallVerifyRemove

##Test2_Verify

Test3_ReleaseNotes

Test4_FileCountDiskUsage
